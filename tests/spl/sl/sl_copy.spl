include "../include/sllist.spl";

procedure copy(lst: Node) returns (ori: Node, res: Node)
  requires lseg(lst, null)
  ensures lseg(ori, null) &*& lseg(res, null)
{
  var curr, cp: Node := lst, null;
  while (curr != null) 
    invariant ((curr == null || acc(curr)) -** lseg(lst, null)) &*& lseg(cp, null)
  {
    var old_cp := cp;
    cp := new Node;
    cp.next := old_cp;
    curr := curr.next;
  }
  return lst, cp;
}
