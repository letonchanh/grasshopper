include "../include/sllist.spl";

procedure filter(lst: Node) returns (res: Node)
  requires lseg(lst, null)
  ensures lseg(res, null)
{
  var prv: Node, curr := null, lst;
  while (curr != null) 
    invariant (prv.next |-> curr || prv == null &*& lst == curr) -** lseg(lst, null);
  {
    var old_curr := curr;
    curr := curr.next; 
    var nondet: Bool;
    if (nondet) {
      if (prv != null) {
        prv.next := old_curr.next;
      } else {
        lst := old_curr.next;
      }
      free old_curr;
    } else {
      prv := old_curr;
    }
  }
  return lst;
}
